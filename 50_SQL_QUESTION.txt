use worker;

create table workers(worker_id int  primary key, first_name varchar(30), last_name varchar(30), salary long , joining_date datetime, department varchar(30))

select * from workers;

insert into workers values
        (1, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),
        (2, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),
        (3, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),
        (4, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),
        (5, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),
        (6, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),
        (7, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account'),
        (8, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');
        
        
        
CREATE TABLE Bonus (
	WORKER_REF_ID INT,
	BONUS_AMOUNT INT(10),
	BONUS_DATE DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Workers(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus 
	(WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
		(001, 5000, '16-02-20'),
		(002, 3000, '16-06-11'),
		(003, 4000, '16-02-20'),
		(001, 4500, '16-02-20'),
		(002, 3500, '16-06-11');


CREATE TABLE Title (
	WORKER_REF_ID INT,
	WORKER_TITLE CHAR(25),
	AFFECTED_FROM DATETIME,
	FOREIGN KEY (WORKER_REF_ID)
		REFERENCES Workers(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title 
	(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
Q-1. Write an SQL query to fetch “FIRST_NAME” from Worker table using the alias name as <WORKER_NAME>.

 select first_name as WORKER_NAME from workers;
 
Q-2. Write an SQL query to fetch “FIRST_NAME” from Worker table in upper case.
 
 select upper(first_name) from workers;
 
Q-3. Write an SQL query to fetch unique values of DEPARTMENT from Worker table.

 select distinct department from workers;
 
Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from Worker table.
 
 select substring(first_name,1,3) from workers;
 
 Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from Worker table.

 select position("A" IN first_name) FROM workers WHERE first_name = "Amitabh";
 
 Q-6. Write an SQL query to print the FIRST_NAME from Worker table after removing white spaces from the right side.

 select rtrim(first_name) from workers;
 
 Q-7. Write an SQL query to print the DEPARTMENT from Worker table after removing white spaces from the left side.

  select ltrim(department) from workers;
  
  Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from Worker table and prints its length.

  select distinct length(department) from workers;
  
  Q-9. Write an SQL query to print the FIRST_NAME from Worker table after replacing ‘a’ with ‘A’.
  
  select replace(first_name,'a','A') from workers;
  
  Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from Worker table into a single column COMPLETE_NAME. A space char should separate them.

  select concat(first_name , " ", last_name ) as full_name from workers;
  
  Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.

  select * from workers  order by first_name ASC;
  
  Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
  
    select * from workers  order by first_name ASC , department DESC;
   
  Q-13. Write an SQL query to print details for Workers with the first name as “Vipul” and “Satish” from Worker table.
   
	select * from workers  where  first_name in ("Vipul","Satish");
  
  Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from Worker table.
 
	select * from workers  where  first_name not in ("Vipul","Satish");
  
  Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
  
    select * from workers where department = "Admin";
    
   Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.

    select * from workers where first_name like "%a%";
	
    Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.

	select * from workers where first_name like "%a"; 
	
    Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.

    select * from workers where first_name like "_____h"; 
	
    Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.

    select * from workers where salary  between 100000 and 500000;
    
	Q-20. Write an SQL query to print details of the Workers who have joined in Feb’2014.

    select * from workers where year(joining_date) = 2014 and month(joining_date) = 02;
    
	Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.

    select count(*) from workers where department = "Admin";
    
	Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.

	select  concat(first_name , " ", last_name ) as worker_name , salary  from workers where salary  between 50000 and 100000;
   
    Q-23. Write an SQL query to fetch the no. of workers for each department in the descending order.
   
    select department , count(*) as no_of_worker from workers group by department order by no_of_worker desc;
    
	Q-24. Write an SQL query to print details of the Workers who are also Managers.

    select distinct w.first_name , T.WORKER_TITLE from workers w inner join Title T on w.WORKER_ID  = T.WORKER_REF_ID and T.WORKER_TITLE in ('Manager');
    
	Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.

    SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*) FROM Title GROUP BY WORKER_TITLE, AFFECTED_FROM HAVING COUNT(*) > 1;
    
	Q-26. Write an SQL query to show only odd rows from a table.

    SELECT * FROM Workers WHERE MOD (WORKER_ID, 2) <> 0;
    
	Q-27. Write an SQL query to show only even rows from a table.

	SELECT * FROM Workers WHERE MOD (WORKER_ID, 2) = 0;
    
    Q-28. Write an SQL query to clone a new table from another table.
	
   CREATE TABLE ClonedTable LIKE workers;
   
   Q-29. Write an SQL query to fetch intersecting records of two tables.

  (SELECT * FROM workers)
   INTERSECT
  (SELECT * FROM ClonedTable);
  
  Q-30. Write an SQL query to show records from one table that another table does not have.

	SELECT *
	FROM   Workers 
	WHERE  WORKER_ID NOT IN (SELECT WORKER_ID FROM Title);
	
Q-31. Write an SQL query to show the current date and time.

select now();

Q-32. Write an SQL query to show the top n (say 10) records of a table.



SELECT * FROM Workers ORDER BY Salary DESC LIMIT 10;



 
Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.

SELECT Salary FROM Workers ORDER BY Salary DESC LIMIT 4,1;

 Q-34. Write an SQL query to determine the 5th highest salary without using TOP or limit method.

SELECT Salary
FROM Workers W1
WHERE 5 = (
 SELECT COUNT( DISTINCT ( W2.Salary ) )
 FROM Workers W2
 WHERE W2.Salary >= W1.Salary
 );
 
    
Q-35. Write an SQL query to fetch the list of employees with the same salary.

Select distinct W.worker_id, W.first_name, W.Salary 
from Workers W, Workers W1 where W.Salary = W1.Salary
 and W.worker_id != W1.worker_id;
 
 Q-36. Write an SQL query to show the second highest salary from a table.

 
 Select max(Salary) from Workers 
where Salary not in (Select max(Salary) from Workers);

Q-37. Write an SQL query to show one row twice in results from a table.

select first_name, department from workers W where W.DEPARTMENT='HR' 
union all 
select first_name, department from Workers W1 where W1.DEPARTMENT='HR';

Q-39. Write an SQL query to fetch the first 50% records from a table.


SELECT * FROM workers WHERE worker_id <= (SELECT count(worker_id)/2 from Workers);

Q-40. Write an SQL query to fetch the departments that have less than five people in it.

SELECT department, COUNT(worker_id) as 'Number_of_Workers' FROM Workers GROUP BY department HAVING COUNT(worker_id) < 5;

Q-41. Write an SQL query to show all departments along with the number of people in there.


SELECT department, COUNT(department) as 'Number_of_Workers' FROM Workers GROUP BY department;

Q-42. Write an SQL query to show the last record from a table.


Select * from Workers where worker_id = (SELECT max(worker_id) from Workers);

Q-43. Write an SQL query to fetch the first row of a table.

Select * from Workers where worker_id = (SELECT min(worker_id) from Workers);

Q-44. Write an SQL query to fetch the last five records from a table.

SELECT * FROM Workers WHERE worker_id <5
UNION
SELECT * FROM (SELECT * FROM Workers W order by W.worker_id DESC) AS W1 WHERE W1.worker_id <5;

Q-45. Write an SQL query to print the name of employees having the highest salary in each department.


SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary from(SELECT max(Salary) as TotalSalary,DEPARTMENT from Workers group by DEPARTMENT) as TempNew 
Inner Join Workers t on TempNew.DEPARTMENT=t.DEPARTMENT 
 and TempNew.TotalSalary=t.Salary;

Q-46. Write an SQL query to fetch three max salaries from a table.


SELECT distinct Salary from workers a WHERE 3 >= (SELECT count(distinct Salary) from workers b WHERE a.Salary <= b.Salary) order by a.Salary desc;

Q-47. Write an SQL query to fetch three min salaries from a table.


SELECT distinct Salary from workers a WHERE 3 >= (SELECT count(distinct Salary) from workers b WHERE a.Salary >= b.Salary) order by a.Salary desc;

Q-48. Write an SQL query to fetch nth max salaries from a table.


SELECT distinct Salary from workers a WHERE 5 >= (SELECT count(distinct Salary) from workers b WHERE a.Salary <= b.Salary) order by a.Salary desc;

Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.


SELECT DEPARTMENT, sum(Salary) from workers group by DEPARTMENT;
 
Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.


SELECT FIRST_NAME, SALARY from Workers WHERE SALARY=(SELECT max(SALARY) from Workers);

    
